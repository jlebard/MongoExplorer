
function jsoneditor_(json,id) {

    var container = document.getElementById(id);
    var options = {
        change : '',
        editable: function (node) {
            // node is an object like:
            //   {
            //     field: 'FIELD',
            //     value: 'VALUE',
            //     path: ['PATH', 'TO', 'NODE']
            //   }
            switch (node.field) {
                case '_id':
                    return false;
                case 'name':
                    return {
                        field: false,
                        value: true
                    };
                default:
                    return true;
            }
        }
    };

    return editor = new JSONEditor(container, options, json);
}

function jsoncodeeditor_(json,id) {

    var container = document.getElementById(id);


    return editor = new JSONEditor(container,
            {mode:"code"},json);

}


function jsonHTMLparser(data){


    myjsonformatted =  JSON.stringify(data,null,'&emsp;');
    text = myjsonformatted.replace(/\"\,/g,'&quot;,<br/>')
            .replace(/\"/g,"&quot;")
            .replace(/\: {/g,': {<br/>')

            .replace(/&emsp;},/g,'<br/>&emsp;},<br>')
            .replace(/&emsp;&emsp;},/g,'<br/>&emsp;&emsp;},<br>')
            .replace(/&emsp;&emsp;&emsp;},/g,'<br/>&emsp;&emsp;&emsp;},<br>')
            .replace(/ }/g,'<br/>}')
            .replace(/  }/g,'<br/>}')
    ;
    return text;



}



function humanFileSize(bytes, si) {
    var thresh = si ? 1000 : 1024;
    if(Math.abs(bytes) < thresh) {
        return bytes + ' B';
    }
    var units = si
            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']
            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];
    var u = -1;
    do {
        bytes /= thresh;
        ++u;
    } while(Math.abs(bytes) >= thresh && u < units.length - 1);
    return bytes.toFixed(1)+' '+units[u];
}